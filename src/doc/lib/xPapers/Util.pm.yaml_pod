---
AUTHORS: "David Bourget with contributions from Zbigniew Lukasiak\n\n"
NAME: xPapers::Util
SUBROUTINES:
  bad: ''
  bareName: ''
  calcWeakenings: 'An alias for L<Text::Names>::weakenings'
  cap_except: ''
  capitalize: ''
  case_fix: ''
  cleanAll: ''
  cleanJournal: ''
  cleanLinks: ''
  cleanName: 'An alias for L<Text::Names>::cleanName'
  cleanNames: ''
  cleanParseName: 'An alias for the L<Text::Names> sub of the same name.'
  clean_field: ''
  composeName: 'An alias for the L<Text::Names> sub of the same name.'
  cond_cap: ''
  dbg: ''
  decodeHTMLEntities: ''
  decodeResp: ''
  dquote: ''
  ed_fix: ''
  fcmp: ''
  file2array: ''
  file2hash: ''
  fixNameParens: ''
  fuzzyGrep: ''
  getFileContent: ''
  guessDecode: ''
  hasMangledTitle: ''
  hash2file: ''
  hash2sql: ''
  hash2url: ''
  isArticle: ''
  isIncomplete: ''
  lastname: ''
  links_fix: ''
  mark_defective: ''
  mkNumId: ''
  my_dist: ''
  my_dist_text: ''
  normalizeNameWhitespace: 'An alias for the L<Text::Names> sub of the same name.'
  numdiff: 'An alias for the L<Biblio::Citation::Compare>::numdiff'
  parseAuthorList: 'An alias for L<Text::Names>::parseNameList'
  parseAuthors: 'An alias for L<Text::Names::parseNames'
  parseName: 'An alias for the L<Text::Names> sub of the same name.'
  parseName2: 'An alias for the L<Text::Names> sub of the same name.'
  quote: 'Quote a string for use within SQL string literals (escapes single quotes)'
  reverseName: 'An alias for the L<Text::Names> sub of the same name.'
  rmDiacritics: 'Remove diacritics from a string, eg "Ã©" becomes "e"'
  rmTags: 'Remove HTML tags from a string'
  safe_decode: 'Decode the HTML entities in a string in a way that guards against bogus Windows-inspired entities'
  sameAuthors: 'An alias for the L<Biblio::Citation::Compare>::sameAuthors.'
  sameEntry: 'An alias for the L<Biblio::Citation::Compare>::sameWork.'
  samePerson: 'An alias for the L<Text::Names> sub of the same name.'
  squote: 'Same as quote()'
  strip: ''
  text2relations: 'Deprecated'
  toUTF: 'Force conversion of a string to UTF8 and sets UTF flag'
  url2hash: 'Transforms a URL (with parameters) into a hash'
  urlDecode: 'Decode a URL-encoded string'
  urlEncode: 'Perform URL encoding'
  variations: 'An alias for L<Text::Names>::variations'
